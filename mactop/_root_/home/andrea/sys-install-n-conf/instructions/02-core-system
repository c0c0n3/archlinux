===========================================================================================
                                     ARCHLINUX
	                SYSTEM INSTALLATION & CONFIGURATION
===========================================================================================


2. CORE SYSTEM
==============

2.1. Update system (http://wiki.archlinux.org/index.php/Beginners'_Guide)
------------------
 
 * pacman -Syy
 * pacman -Su


2.2. Add user (http://wiki.archlinux.org/index.php/Beginners'_Guide)
-------------

 * useradd -m -g users -G audio,games,lp,optical,power,scanner,storage,video,wheel 
           -s /bin/bash andrea
 * passwd andrea

   NOTES
   -----
   To see what groups are available: `cut -f1 -d: /etc/group | sort`


2.3. Privilege escalation (http://wiki.archlinux.org/index.php/Beginners'_Guide)
-------------------------

 * sudo (http://wiki.archlinux.org/index.php/Sudo)
   + pacman -S sudo
   + export EDITOR=nano
   + visudo  --> uncomment line with wheel, i.e. %wheel ALL=(ALL) ALL (andrea is in wheel)

   NOTE
   ----
   Changes are saved to /etc/sudoers, but do NOT edit this file manually

 * PAM (only allow 'wheel' users to su)
   + uncomment following line in /etc/pam.d/su
     #auth		required	pam_wheel.so use_uid


2.4. Bash (http://wiki.archlinux.org/index.php/Bash,
---------  http://wiki.archlinux.org/index.php/Core_Utilities,
           http://wiki.archlinux.org/index.php/Color_Bash_Prompt)

 * Install advanced completion: pacman -S bash-completion
 * Add support for paging compressed files: pacman -S lesspipe
 * Colourise and set environment --> .bashrc


2.5. Useful Tools
-----------------

 * Hardware: pacman -S hwinfo hwdetect

 * Disk: pacman -S hdparm sdparm smartmontools
   See:
      - https://wiki.archlinux.org/index.php/Hdparm    
      - https://wiki.archlinux.org/index.php/SMART

 * Filesystems: pacman -S ntfs-3g rsync eject
   See:
      - https://wiki.archlinux.org/index.php/NTFS-3G
      - https://wiki.archlinux.org/index.php/Rsync

 * Network: pacman -S ethtool tcpdump dnsutils nmap ntp
   See also:
      - https://bbs.archlinux.org/viewtopic.php?pid=853014
      - https://wiki.archlinux.org/index.php/NTP

 * Commands: pacman -S tree bc 

 * Compression: pacman -S fastjar unzip unrar cdrkit
  
   NOTE
   They all work with lesspipe: 
     - fastjar: support for jar files
     - unzip: support for zip files
     - unrar: support for rar files
     - cdrkit: support for iso files


2.6. Networking
---------------
Overall configuration and advice:
 
 * https://wiki.archlinux.org/index.php/Configuring_Network
 * https://wiki.archlinux.org/index.php/General_Recommendations#Networking
 
2.6.1. Wired Configuration
--------------------------
 * pacman -S ifplugd
 * pacman -S ntp
 * in rc.conf: DAEMONS=(... @ifplugd ...)
 * in rc.conf: remove network and netfs from DAEMONS
 
 NOTES
 -----
 1. See ifplugd on https://wiki.archlinux.org/index.php/Configuring_Network.

 2. Why remove network?  Because ifplugd calls the script anyway to bring the interface
 up (down), so there's no need for it.  Indeed the network script start() does much more
 than bringing up the interfaces configured in rc.conf --- bonding, routes, bridges;
 however, we need none of those.  (Note that the routes are also handled by ifplugd by
 means of its routes script --- look in /etc/ifplugd.)

 3. Why remove netfs?  Because we don't have any network file systems to mount in fstab.
 (And we never will actually; if we need to connect to one --- e.g. at work, it'll be 
 temporary anyway, so it's pointless to add it to fstab.)

 4. ifplugd will try to sync up to a time server; it needs ntpdate which is part of the
 ntp package; however, it's deprecated.  Note that running 'ntpd -qg &' has the same
 effect of ntpdate --- see 
   https://wiki.archlinux.org/index.php/Network_Time_Protocol_daemon
 

 5. /etc/ifplugd/ifup.d/01-route.sh should check whether the gateway variable is empty;
 this avoids the error message in daemons.log --- i.e. the result of calling 'route add'. 
 However, this is harmless, so we keep the script as is and ignore the message.
 
 6. I keep on getting this in daemons.log and errors.log:
    
	ifplugd(eth0)[4690]: Program execution failed, return value is 1.
 
 I initially thought the ifplugd routes scripts were responsible for that --- I get the
 error when unplugging the cable too.  However, after commenting out the two scripts,
 the error was still there.  In any case, everything seems to work fine, so I won't
 bother with this.

2.6.2. Wireless Driver (https://wiki.archlinux.org/index.php/Broadcom_BCM4312)
----------------------
 * install broadcom-wl driver from AUR

 * in rc.conf: MODULES=(... lib80211_crypt_tkip wl ...)

 * cp udev/10-network.rules /etc/udev/rules.d/

  NOTES
  -----
  1. The broadcom-wl package in AUR installs its own /etc/modprobe.d/broadcom-wl.conf to
  blacklist conficting modules --- b43, ssb, etc. 

  2. The udev rule is to prevent the wl driver to swap interface names --- which happened a
  couple of times.
  3. To build AUR packages see: https://wiki.archlinux.org/index.php/Arch_User_Repository
  4. Open source drivers are also been developed, may be worth keeping an eye on:
  
    * http://wireless.kernel.org/en/users/Drivers/brcm80211
	
  Also see those related threads:
  
    * http://forums.gentoo.org/viewtopic-t-825597-start-0.html
    * http://ubuntuforums.org/showthread.php?t=1592044
    * http://forums.opensuse.org/english/get-help-here/hardware/447485-bcm43224-bcm43225-bcm4313-installation-guide.html

  5. For more info on blacklisting, see:
     * https://wiki.archlinux.org/index.php/Blacklisting
     * http://www.archlinux.org/news/changes-to-module-blacklisting/

2.6.3. Wireless Configuration (https://wiki.archlinux.org/index.php/Wireless_Setup,
-----------------------------  https://wiki.archlinux.org/index.php/WPA_Supplicant)

 * pacman -S wireless_tools wpa_supplicant

 * install wpa_auto from AUR

 * touch /etc/wpa_supplicant.my.conf
   + minimal config:
       update_config=0
       ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=wheel
       eapol_version=1
       ap_scan=1
       fast_reauth=1

 * edit /etc/wpa_auto.conf: 
   + change WPA_CONFIG var to: WPA_CONFIG="/etc/wpa_supplicant.my.conf"

 * in rc.conf: DAEMONS=(... @wpa_auto ...)


  NOTES
  -----
  1. wpa_auto is a simple script that brings the interface up, starts wpa_supplicant, and
  uses dhcpcd to get an IP address *after* wpa_supplicant has associated the interface to
  one of the networks specified in /etc/wpa_supplicant.my.conf --- value of WPA_CONFIG.

  2. Why wpa_supplicant.my.conf?  Because some of the network block examples in the
  default config file (/etc/wpa_supplicant.conf) specify features that the wext driver
  does not recognise; this causes the wpa_supplicant daemon to abort.
 
  3. Managing networks.  On start up, wpa_supplicant will look at the networks list in
  wpa_supplicant.my.conf and attempt to join one of them.  Add or remove networks from 
  the list as you please; wpa_passphrase can be used to generate a network block with a
  WPA PSK passphrase.  Also, use wpa_cli to manage the running wpa_supplicant daemon ---
  e.g. re-read config, join another network (either in the list or new), etc.  Note that
  changes made through wpa_cli are not persisted to our config file because we have set
  update_config=0; also note that we allow wheel members to manage the daemon through
  wpa_cli.


2.6.4. Other
------------
Our set up above caters for both wired and wireless automatic configuration; so there's
no need for more complex solutions such as netcfg or Network Manager.
For more info about netcfg, see:
 
 * https://wiki.archlinux.org/index.php/Netcfg

and for reasons not to use it, see:

 * https://bbs.archlinux.org/viewtopic.php?id=55609
 * https://bbs.archlinux.org/viewtopic.php?id=92004

For more info about Network Manager, see:

 * https://wiki.archlinux.org/index.php/NetworkManager


2.7. Removable Media (https://wiki.archlinux.org/index.php/Udev)
--------------------
If not using a DE or if you don't like the way the DE mounts/removes media (USB, CD/DVD, 
etc.), then:
 
 * cp udev/*media* /etc/udev/rules.d/

This will handle the auto-mounting of media under the /media directory.  Use 'eject' to 
unmount & tell the device to allow media removal.  (The udev rule + script will take care
of removing the mount dir.)

  NOTES
  -----
  1. ntfs-3g.  Should be installed for better NTFS support.

  2. GNOME interaction.  Our script will do nothing if a GNOME session is running, so
  if the DE is GNOME, go ahead and install the script.

  3. GNOME will use FUSE+udisks to mount in user-space w/o requiring root perms; also
  it will allow to remove the media w/o having root perms.  Our script mounts w/ the
  'users,group' options, but for some reason you still need to be root to unmount.

  4. For the above reason, you may want to:
   * Add to sudoers (su root; export EDITOR=nano; visudo):

     ## Members of the optical group may execute the following commands without password.
     %optical ALL = NOPASSWD: /usr/bin/eject

  5. Couldn't find a definitive answer to "how to safely remove USB drives under Linux".
  It seems that eject should do anyway --- well, at least if you believe 'man sdparm'
  (see unlock command description).
  However, my WD led is still on after ejecting; the same happens under GNOME, which uses
  udisks --- you can try it manually w/ udisks and will see the led still doesn't go off.
  Using the script from:
   
   * http://elliotli.blogspot.com/2009/01/safely-remove-usb-hard-drive-in-linux.html
 
  didn't work --- script echoes 'suspend' into power/level, which fails.


2.8. Power Management
---------------------
Overall advice:

 * http://www.lesswatts.org/tips/
 * http://www.gentoo.org/doc/en/power-management-guide.xml 
 * https://wiki.archlinux.org/index.php/General_Recommendations#Power_management
 * https://wiki.archlinux.org/index.php/Category:Power_management_(English)
 * https://wiki.ubuntu.com/PowerManagement

For other power management settings, see Xorg and NVIDIA sections below.

  NOTES
  -----
  1. Gnome Power Manager (http://projects.gnome.org/gnome-power-manager/).
  If installing Gnome, this package basically provides a full-blown solution --- except
  for CPU frequency scaling, it seems.  It piggybacks on UPower, which in turn uses
  pm-utils.
  Config options under: gnome-settings -> /apps/gnome-power-manager/
  
  2. laptop-mode-tools.  It seems that much of the functionality is provided already by
  cpufrequtils + pm-utils, so there's no need to install this package too.  (Also if
  using Gnome Power Manager, laptop-mode-tools is redundant.) 

2.8.1. acpid (https://wiki.archlinux.org/index.php/Acpid) 
------------ 
 * pacman -S acpid
 * Add acpid to DAEMONS in rc.conf
 * cp -r power-management/acpi/* /etc/acpi
 * cp power-management/leds/* /usr/sbin/
 * Edit /etc/acpi/events/anything and comment all out
 * Call /etc/acpi/actions/ac.sh from /etc/rc.local
 
   NOTES
   -----
   1. Put acpid at the beginning of the DAEMONS array, just after sys log; also do *not* 
   background it.  This is because NVIDIA will try to connect to the acpid socket, so
   we have to make sure the daemon is started *before* NVIDIA kicks in.

   2. Our scripts in power-management provide a full-blown power management solution which
   will *not* interfere with GNOME, if it is running.  If GNOME is not running, then our
   script will take control of power management.  Note that GNOME is currently lacking
   support for CPU scaling and keyboard backlight; our scripts will take care of those
   if GNOME is running so as to provide a complete management solution in all cases.
   NB those scripts depend on cpufreutils and pm-utils; see below.

   3. We put the scripts in leds/ under /usr/sbin because they may be useful to set the
   LCD/keyboard backlight from the command line. 

   4. We comment out the default dispatching logic in events/anything because the default
   handlers.sh script is useless to us.
   (NB when we upgrade pacman will not override events/anything and so handlers.sh will 
   not be called after an upgrade.)

   5. Calling ac.sh from rc.local makes sure that if we're on battery, then power-save
   mode kicks in.  (The DE power manager will do it, but not until you log into the
   DE.)

2.8.2. cpufrequtils (https://wiki.archlinux.org/index.php/Cpufrequtils)
-------------------
 * pacman -S cpufrequtils
 * Add to MODULES in rc.conf: acpi-cpufreq cpufreq_ondemand cpufreq_performance

2.8.3. pm-utils (https://wiki.archlinux.org/index.php/Pm-utils)
---------------

 * Optionally edit following script under /usr/lib/pm-utils/power.d/:

   + laptop-mode -> laptop_mode_ac() ->
       if state_exists laptop_mode_default; ...
       else
       	   write_values 0 20 10 500  <-- change original values to these

   + harddrive -> get rid of -M when calling hdparm 
     (hard drive doesn't support Drive Acoustic Management; run 'hdparm -M')

 * If editing the above, then also:
    chattr +i /usr/lib/pm-utils/power.d/laptop-mode

  NOTES
  -----
  1. The Arch package does not include the following scripts: harddrive, disable_wol.
  This is because they've been found to be dangerous, see:

       https://bbs.archlinux.org/viewtopic.php?id=112160

  2. harddrive script.  Spin down defaults to 6, which will spin the drive down after 30 
  seconds of inactivity; for more info about spinning down read:
    http://samwel.tk/laptop_mode/faq
    (FAQ #1: Things You Might Want To Know)
  Also see bug-report about load cycles and reduced disk lifetime at:
    https://bugs.launchpad.net/ubuntu/+source/acpi-support/+bug/59695

  3. disable_wol script.  To find out more about WOL, see:
     http://en.wikipedia.org/wiki/Wake-on-LAN

  4. laptop-mode script.  When switching to battery, it sets suitable values in the files 
  laptop_mode, dirty_ratio, dirty_background_ratio, and dirty_writeback_centisecs under 
  /proc/sys/vm --- see write_values().  When switching back to AC, it restores the original
  values saved in /var/run/pm-utils/pm-powersave/storage/state\:laptop_mode_default.  The
  values we're changing above are the same as those in the /proc/sys/vm files when on AC
  and are there for consistency sake --- in fact, these are exactly the values pm-utils
  saves in 'state\:laptop_mode_default'.

  5. Why chattr?  Because pm-utils overrides the scripts on an update; this way we'll get
  an error and so we'll remember to merge the old files with the new. 

  NB For the time being we do not edit the script and just rely on what the Arch package
  provides --- reason being that it's not worth the trouble on an update.

------------------------------------------------------------------------------------------

  TODO: Suspend Issues. 
  Suspend works for the most part, but there are a couple of loose ends.
  Our set up is to let GNOME call pm-suspend if GNOME it is running or else our lid.sh
  script kicks in (triggered by ACPI).  This set up works except in the following cases:

   * runlevel 3: i.e. no X/GDM/DE, but just a TTY.  The lid.sh calls pm-suspend when
     the lid is closed, the system wakes up when the lid is opened up again, but the
     screen is dead.  The reason I know it's the screen is that after typing (blindfolded)
     'sudo reboot + pwd' the system restarted; so it must have been the screen not
     displaying the TTY output.

   * runlevel 5: GNOME running, but logged into a TTY.  In this case the lid.sh does
     nothing b/c GNOME Power Manager is running and the latter does nothing either b/c
     we're logged into the TTY.  (NB this works just fine when using XMonad b/c GNOME
     Power Manager is not running and so lid.sh goes ahead and calls pm-suspend.) 

  As these are minor issues, I will not try to fix them.  Also note that more info
  about suspending to RAM can be found at:
    * https://wiki.archlinux.org/index.php/Suspending_to_RAM_with_hibernate-script
  
  Finally, should the mouse stop working afer a suspend, look at: 
    * https://wiki.archlinux.org/index.php/Pm-utils#Restarting_the_mouse

  TODO: Turning off WiFi Radio.
  When the WiFi is not needed at all, you could turn off the radio completely, which would
  save some power --- see http://www.lesswatts.org/tips/wireless.php.
  I've tried to load the rfkill module and then installed the rfkill tool from extra;
  however, it doesn't seem to even be able to find my device --- 'rfkill list all' shows
  nothing.  
  However, the only use case I can see for turning off the WiFi radio is when the laptop
  is running on battery and is plugged into the ethernet.  So is fixing this really worth
  the effort?

------------------------------------------------------------------------------------------

2.8.4. Backlights
-----------------
 * Keyboard: works out of the box (/sys/class/leds/smc::kbd_backlight)
 
 * LCD: works out of the box (/sys/class/backlight/apple_backlight)

 * Add to sudoers (su root; export EDITOR=nano; visudo):

   ## Members of the power group may execute the following commands without password.
   %power ALL = NOPASSWD: /usr/sbin/lcd-bl, /usr/sbin/kbd-bl


  NOTES
  -----
  1. We allow members of the power group to run kbd-bl and lcd-bl without having to specify
  a password as this may come handy for tying the scripts to hotkeys --- e.g. the hotkey
  action for the LCD brightness up key could just be 'sudo lcd-bl up' and it will work from
  anywhere (provided the user is in the power group) because sudo will not prompt for a
  password.

  2. Some resources:
     + http://allanmcrae.com/2010/04/installing-arch-on-a-macbook-pro-5-5/
     + https://help.ubuntu.com/community/MacBookPro6-2/Lucid#LCD
     + https://wiki.archlinux.org/index.php/Samsung_N150#Backlight
     + https://bbs.archlinux.org/viewtopic.php?id=74914


2.9. Printing
-------------
TODO: install cups when needed, if ever.


2.10. Other
-----------

 * Background some deamons (use '@' in rc.conf), e.g. cron, alsa, etc.

 * If you need to retain boot messages see:
     http://wiki.archlinux.org/index.php/Disable_clearing_of_boot_messages
   However, a cheaper option is to use Ctrl+S to pause the output on screen and Ctrl+Q 
   to resume it.

 * Install Emacs: 
   + pacman -S emacs
   + Copy .emacs into ~/ and /root/
   + Add to .bashrc: export EDITOR=emacs
   
   NOTES
    + Some modules (e.g. auctex, haskell-mode) haven't been installed yet at this stage, 
      so you should get errors in the message buffer (which you can ignore as we'll 
      install those modules later)
    + You may want to install Emacs before step 2.2 so to have a decent editor early.
    + Arch Wiki: http://wiki.archlinux.org/index.php/Emacs

 * To clean up packages run:
      
      pacman -Rn $(pacman -Qdtq) 

   until there are no more orphans left.